import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

# Load the Titanic dataset
data = pd.read_csv('titanic_dataset.csv')  # Replace 'titanic_dataset.csv' with your dataset file

# Preprocess the data
# Replace missing values, encode categorical variables, etc.

# Select the features and target variable
features = ['Pclass', 'Age', 'Sex', 'SibSp', 'Parch']
target = 'Survived'

X = data[features]
y = data[target]

# Convert categorical variables to numerical using one-hot encoding
X_encoded = pd.get_dummies(X, drop_first=True)

# Split the data into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X_encoded, y, test_size=0.2, random_state=42)

# Train the Random Forest classifier
model = RandomForestClassifier()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
